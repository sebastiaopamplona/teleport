syntax = "proto3";

package teleport.terminal.v1;

option go_package = "github.com/gravitational/teleport/lib/teleterm/v1";

import "google/protobuf/empty.proto";
import "v1/cluster.proto";
import "v1/database.proto";
import "v1/gateway.proto";
import "v1/kube.proto";
import "v1/app.proto";
import "v1/server.proto";
import "v1/auth_settings.proto";

// TerminalService desribes teleterm service
service TerminalService {
    // ListRootClusters lists root clusters
    rpc ListRootClusters(ListClustersRequest) returns (ListClustersResponse);
    // ListLeafClusters lists leaf clusters
    rpc ListLeafClusters(ListLeafClustersRequest) returns (ListClustersResponse);
    // ListDatabases lists databases
    rpc ListDatabases(ListDatabasesRequest) returns (ListDatabasesResponse);
    // ListGateways lists gateways
    rpc ListGateways(ListGatewaysRequest) returns (ListGatewaysResponse);
    // ListServers lists servers
    rpc ListServers(ListServersRequest) returns (ListServersResponse);
    // ListKubes list kubes
    rpc ListKubes(ListKubesRequest) returns (ListKubesResponse);
    // ListApps list apps
    rpc ListApps(ListAppsRequest) returns (ListAppsResponse);
    // CreateGateway creates a gateway
    rpc CreateGateway(CreateGatewayRequest) returns (Gateway);
    // AddCluster adds a cluster to profile
    rpc AddCluster(AddClusterRequest) returns (Cluster);
    // RemoveCluster removes a cluster from profile
    rpc RemoveCluster(RemoveClusterRequest) returns (EmptyResponse);
    // RemoveGateway removes a gateway
    rpc RemoveGateway(RemoveGatewayRequest) returns (EmptyResponse);
    // GetAuthSettings returns cluster auth settigns
    rpc GetAuthSettings(GetAuthSettingsRequest) returns (AuthSettings);
    // GetCluster returns a cluster
    rpc GetCluster(GetClusterRequest) returns (Cluster);
    // Login logs in a user to a cluster
    rpc Login(LoginRequest) returns (EmptyResponse);
    // ClusterLogin logs out a user from cluster
    rpc Logout(LogoutRequest) returns (EmptyResponse);
}

// RemoveClusterRequest describes RemoveClusterRequest
message RemoveClusterRequest { string cluster_uri = 1; }

// GetClusterRequest describes GetClusterRequest
message GetClusterRequest { string cluster_uri = 1; }

// LogoutRequest describes LogoutRequest
message LogoutRequest { string cluster_uri = 1; }

// LoginRequest describes cluster login request
message LoginRequest {
    // cluster_uri is the cluster uri
    string cluster_uri = 1;
    // local holds parameters for local logins
    LocalParams local = 2;
    // sso holds parameters for sso logins
    SsoParams sso = 3;

    // LocalParams describes parameters for local user logins
    message LocalParams {
        // user is the user name
        string user = 1;
        // password is the user password
        string password = 2;
        // token is the 2FA token
        string token = 3;
    }

    // SsoParams describes SSO parameters
    message SsoParams {
        // provider_type is the provider type
        string provider_type = 1;
        // provider_name is the provider name
        string provider_name = 2;
    }
}

// AddClusterRequest describes AddClusterRequest
message AddClusterRequest { string name = 1; }

// ListKubesRequest describes ListKubesRequest
message ListKubesRequest { string cluster_uri = 1; }

// ListAppsRequest describes ListAppsRequest
message ListAppsRequest { string cluster_uri = 1; }

// ListClustersRequest describes ListClustersRequest
message ListClustersRequest {}

// ListClustersResponse describes ListClustersResponse
message ListClustersResponse { repeated Cluster clusters = 1; }

// ListDatabasesRequest describes ListDatabasesRequest
message ListDatabasesRequest { string cluster_uri = 1; }

// ListLeafClustersRequest describes ListLeafClustersRequest
message ListLeafClustersRequest { string cluster_uri = 1; }

// ListDatabasesResponse describes ListDatabasesResponse
message ListDatabasesResponse { repeated Database databases = 1; }

// CreateGatewayRequest describes CreateGatewayRequest
message CreateGatewayRequest {
    string target_uri = 1;
    string target_user = 2;
    string local_port = 3;
}

// ListGatewaysRequest describes ListGatewaysRequest
message ListGatewaysRequest { repeated string cluster_ids = 1; }

// ListGatewaysResponse describes ListGatewaysResponse
message ListGatewaysResponse { repeated Gateway gateways = 1; }

// RemoveGatewayRequest describes RemoveGatewayRequest
message RemoveGatewayRequest { string gateway_uri = 1; }

// ListServersRequest describes ListServersRequest
message ListServersRequest { string cluster_uri = 1; }

// ListServersResponse describes ListServersResponse
message ListServersResponse { repeated Server servers = 1; }

// ListKubesResponse describes ListKubesResponse
message ListKubesResponse { repeated Kube kubes = 1; }

// ListAppsResponse describes ListAppsResponse
message ListAppsResponse { repeated App apps = 1; }

// GetAuthSettingsRequest describes GetAuthSettingsRequest
message GetAuthSettingsRequest { string cluster_uri = 1; }

// EmptyResponse describes EmptyResponse
message EmptyResponse {}
